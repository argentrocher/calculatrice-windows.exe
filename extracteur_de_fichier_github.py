import urllib.request
import json
import os

# attention, ce code ne fournit pas de cl√© d'acc√®s sur le r√©p√®rtoire Github, les requ√™tes sont donc limit√© en h, si trop de demande, ce code ne fonctionnera plus

OWNER = "argentrocher"
REPO = "calculatrice-windows.exe"
API_URL = f"https://api.github.com/repos/{OWNER}/{REPO}/contents/"
COMMITS_URL = f"https://api.github.com/repos/{OWNER}/{REPO}/commits?path="
COMMITS_URL1 = f"https://api.github.com/repos/{OWNER}/{REPO}/commits"

def github_api_request(url):
    req = urllib.request.Request(url, headers={'User-Agent': 'Mozilla/5.0'})
    with urllib.request.urlopen(req) as response:
        return json.loads(response.read())

def get_last_modified_global():
    commits = github_api_request(COMMITS_URL1)
    if commits:
        latest_commit = commits[0]
        return latest_commit['commit']['committer']['date']
    return "Inconnu"

def get_last_modified(filename):
    url = COMMITS_URL + filename
    commits = github_api_request(url)
    if commits:
        return commits[0]['commit']['committer']['date']
    return "Inconnu"

def get_github_files():
    return github_api_request(API_URL)

def download_file(file_info):
    download_url = file_info['download_url']
    filename = file_info['name']

    print(f"T√©l√©chargement de {filename}...")
    req = urllib.request.Request(download_url, headers={'User-Agent': 'Mozilla/5.0'})
    with urllib.request.urlopen(req) as response:
        content = response.read()

    with open(filename, 'wb') as f:
        f.write(content)
    print(f"‚úÖ Fichier '{filename}' t√©l√©charg√© avec succ√®s.")

def main():
    print(f"üì¶ Informations sur le d√©p√¥t GitHub {REPO}:")
    last_global = get_last_modified_global()
    print(f"üìÖ Derni√®re modification globale du d√©p√¥t : {last_global}\n")
    
    files = get_github_files()
    print("üìÅ Fichiers dans le d√©p√¥t :")
    for file in files:
        modified = get_last_modified(file['name'])
        print(f" - {file['name']} | Derni√®re modification : {modified}")

    while True:
        cmd = input("\nTapez 'save nom_du_fichier' pour t√©l√©charger, ou 'exit' pour quitter : ").strip()
        if cmd == "exit":
            print("üëã Fin du programme.")
            break
        if cmd == "version" or cmd == "v":
            print("version 0.1, tout droit r√©serv√© √† argentropcher, assign√© au compte Google argentropcher,\nmodification autoris√© (se code s'adapte √† tout les d√©pots Github facilement et peut √™tre modifier librement)")
            continue
        if cmd.startswith("save "):
            filename = cmd[5:]
            found = False
            for file in files:
                if file['name'] == filename:
                    download_file(file)
                    found = True
                    break
            if not found:
                print("‚ùå Fichier non trouv√©.")
        else:
            print("‚ùó Commande invalide. Utilisez : save nom_du_fichier ou exit.")


main()
